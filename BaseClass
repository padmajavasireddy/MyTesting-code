public class TestBase {

	public static WebDriver driver;
	public static Properties prop;
	public static LoginPage loginpage;
	public static HomePage homepage;
	//public static Logger log;
	public static final String USERNAME = "padmajavasireddy1";
	public static final String AUTOMATE_KEY = "y45YxdG3rUp5eZ3fWtXP";
	public static final String Url = "https://" + USERNAME + ":" + AUTOMATE_KEY + "@hub-cloud.browserstack.com/wd/hub"; 
	public static Logger log;
	 
	public TestBase() 
	{
		prop = new Properties();
		try {
			FileInputStream ip = new FileInputStream("C:\\Users\\user\\eclipse-workspace\\FreeCRMTest\\src\\main\\java\\com\\crm\\qa\\config\\config.properties");
			prop.load(ip);
			}
		catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
		}
		 catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		BasicConfigurator.configure();
		Logger.getLogger(SignupPage.class);
		PropertyConfigurator.configure("log4j.properties");
	}
	
	
	public static void initialization() throws MalformedURLException 
	{
		/*DesiredCapabilities caps = DesiredCapabilities.chrome();
		caps.setPlatform(Platform.XP);
		caps.setCapability("browserstack.debug", true);
		driver = new RemoteWebDriver(new URL(Url), caps);
		driver.manage().window().maximize();
		driver.manage().deleteAllCookies();
		driver.manage().timeouts().pageLoadTimeout(3000, TimeUnit.SECONDS);
		driver.get(prop.getProperty("url"));
		driver.manage().timeouts().implicitlyWait(3000, TimeUnit.SECONDS);*/
		if (prop.getProperty("browser").equalsIgnoreCase("chrome"))
		{
			System.setProperty("webdriver.chrome.driver", "D:\\chromedriver_win32\\chromedriver.exe");
		 	driver = new ChromeDriver();
		}	
		else if (prop.getProperty("browser").equalsIgnoreCase("firefox"))
		{
			System.setProperty("webdriver.gecko.driver", "");
			driver = new FirefoxDriver();
		}
		else if (prop.getProperty("browser").equalsIgnoreCase("IE"))
		{
			System.setProperty("webdriver.ie.driver","");
			driver = new InternetExplorerDriver();
		}
		
		driver.manage().window().maximize();
		driver.manage().deleteAllCookies();
		driver.manage().timeouts().pageLoadTimeout(3000, TimeUnit.SECONDS);
		driver.get(prop.getProperty("url"));
		driver.manage().timeouts().implicitlyWait(3000, TimeUnit.SECONDS);
		
		
			
	}
	
}
